package com.lottery.controller;

import java.util.ArrayList;
import java.util.List;
import java.util.Random;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.scheduling.annotation.Scheduled;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RestController;

import com.lottery.service.WinningNumberService;

@RestController
public class WinningNumberController {
	
    @Autowired
    private WinningNumberService winningNumberService;

    // Schedule the job to run at 12:01 AM every day
    @Scheduled(cron = "0 1 0 * * *")
    public void triggerCalculationMicroservice() {
    	
        // Call the Calculation micro-service to get the latest winning numbers
        List<Integer> winningNumbers = getLatestWinningNumbers();

        // Save the winning numbers in the Winner micro-service
        winningNumberService.saveWinningNumbers(winningNumbers);
    }

    @GetMapping("/winning-numbers/{number}")
    public ResponseEntity<Boolean> isWinningNumber(@PathVariable int number) {
        boolean isWinningNumber = winningNumberService.isWinningNumber(number);
        return ResponseEntity.ok(isWinningNumber);
    }

    // Mock implementation of the Calculation microservice
    private List<Integer> getLatestWinningNumbers() {
    	
        Random random = new Random();
        List<Integer> winningNumbers = new ArrayList<>();
        int numOfWinningNumbers = random.nextInt(901) + 100; // Generate a random number of winning numbers between 100 and 1000
        for (int i = 0; i < numOfWinningNumbers; i++) {
            winningNumbers.add(random.nextInt(10000) + 1); // Generate a winning number between 1 and 10000
        }
        return winningNumbers;
    }
}
